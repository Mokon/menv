#!/bin/bash
# (C) 2013-2019 David 'Mokon' Bond, All Rights Reserved

function determine_dist {
  if type lsb_release &> /dev/null ; then
    DIST=$(lsb_release -a | grep "Distributor ID" | awk {'print tolower($3)'})
  else
    DIST=""
  fi

  if [ -z $DIST ] && [ -f /etc/redhat-release ] ; then
    if grep -q Fedora /etc/redhat-release; then
      DIST=fedora
    fi

    if grep -q CentOS /etc/redhat-release; then
      DIST=centos
    fi
  fi

  if [ -z $DIST ] && [ -f /etc/debian_version ] ; then
    DIST=debian
  fi

  if [ -z $DIST ] && [ -f /etc/os-release ] ; then
    DIST="unknown"
  fi

  if [ -z $DIST ] ; then
    DIST=$(uname -a)
  fi

  case $DIST in
    *fedora*|*centos*)
      PKG_TYPE=rpm ;
      version=`sed -rn 's/VERSION_ID=(.*)/\1/p' /etc/os-release | sed 's/"//g'`

      if [ "$version" -ge "22" ] ; then
        PKG_MGMT=dnf
      else
        PKG_MGMT=yum
      fi
      ;;
    *redhat*) PKG_TYPE=rpm ; PKG_MGMT=yum ;;
    *Darwin*) DIST=darwin ; PKG_TYPE=pkg ; PKG_MGMT=brew ;;
    *debian*|*ubuntu*) PKG_TYPE=dpkg ; PKG_MGMT=apt ;;
    *) PKG_TYPE=unknown ; PKG_MGMT=unknown ; echo "Unknown Distribution" ;;
  esac

  export DIST
  export PKG_TYPE
  export PKG_MGMT
}

determine_dist

alias dist_install=${DIST}_install
alias dist_local_install=${DIST}_local_install
alias ins=dist_install
alias ${DIST}_install=${PKG_MGMT}_install
alias ${DIST}_local_install=${PKG_MGMT}_local_install

alias dist_update=${DIST}_update
alias ${DIST}_update=${PKG_MGMT}_update

alias yum_install="sudo yum install -q -y"
alias dnf_install="sudo dnf install -q -y"
alias brew_install="sudo brew install -q -y"
alias apt_install="sudo apt-get --yes --force-yes install -qq"

alias yum_update="sudo yum update -q -y"
alias dnf_update="sudo dnf update -q -y"
alias brew_update="sudo brew upgrade -q -y"
alias apt_update="sudo apt-get update ; sudo apt-get upgrade -q -y"

alias yum_local_install="sudo yum localinstall -q -y --nogpgcheck"
alias dnf_local_install="sudo dnf install -q -y"
alias brew_local_install="echo 'I dont know how to local install with brew'"
alias apt_local_install="sudo apt-get install -q -y"

alias global_install_package="install_package"

alias update_packages=dist_update

function install_package {
  local dist_to_pkg=$1

  eval "local pkg=\${$dist_to_pkg[$DIST]}"

  if [ "$pkg" == "skip" ]; then
    return 0
  fi

  echo "Installing package '$pkg'"

  dist_install $pkg 2>&1 | \
    tee -a ${menv_pkg_install_log} | \
    grep -v "already installed"
}

function local_install_package {
  local pkg=$1

  dist_local_install $pkg 2>&1 | \
    tee -a ${menv_pkg_install_log} | \
    grep -v "already installed\|kB/s"
}

function install_simple_package {
  local pkg_name=$1

  declare -A pkg_arr
  pkg_arr=(
    [fedora]="$pkg_name"
    [centos]="$pkg_name"
    [debian]="$pkg_name"
    [ubuntu]="$pkg_name"
  )

  install_package pkg_arr
}

function install_simple_packages {
  for package in "$@" ; do
    install_simple_package $package
  done
}

function npm_install_package {
  local pkg=$1

  echo "Installing npm package '$pkg'"
  npm install --loglevel error -g $pkg 2>&1 | \
    tee -a ${menv_pkg_install_log} > /dev/null
}

function npm_install_packages {
  for package in "$@" ; do
    npm_install_package $package
  done
}

function gem_install_package {
  local pkg=$1

  echo "Installing gem package '$pkg'"
  gem install -q --install-dir=${menv_cache_bin_dir} \
    -n ${menv_cache_bin_dir} $pkg 2>&1 | \
    tee -a ${menv_pkg_install_log} > /dev/null
}

function gem_install_packages {
  for package in "$@" ; do
    gem_install_package $package
  done
}

function pip_install_package {
  local pkg=$1

  echo "Installing pip package '$pkg'"
  pip -q install $pkg 2>&1 | \
    tee -a ${menv_pkg_install_log} > /dev/null
}

function pip_install_packages {
  for package in "$@" ; do
    pip_install_package $package
  done
}

function create_yum_dnf_repo {
  local repo=$1
  local url=$2
  local key=$3

  if [ -z ${key+x} ]; then
    key="\ngpgcheck=0"
  elif [ "$key" == "norepo" ]; then
    key="\ngpgcheck=0\nrepo_gpgcheck=0"
  else
    key="\ngpgcheck=1\ngpgkey=${key}"
  fi

  cat << EOF | sudo tee /etc/yum.repos.d/${repo}.repo &> /dev/null
[${repo}]
name=${repo}
baseurl=${url}/\$basearch
enabled=1${key}
EOF
}

function parse_and_install_pkgs_file {
  local pkg=$1

  while read -r fedora_pkg debian_pkg ubuntu_pkg centos_pkg darwin_pkg; do
    if [ -z "$debian_pkg" ] ; then
      debian_pkg=$fedora_pkg
    fi

    if [ -z "$ubuntu_pkg" ] ; then
      ubuntu_pkg=$debian_pkg
    fi

    if [ -z "$centos_pkg" ] ; then
      centos_pkg=$fedora_pkg
    fi
    
    if [ -z "$darwin_pkg" ] ; then
      darwin_pkg="skip"
    fi

    declare -A pkg_arr
    pkg_arr=(
      [fedora]="$fedora_pkg"
      [centos]="$centos_pkg"
      [debian]="$debian_pkg"
      [ubuntu]="$ubuntu_pkg"
      [darwin]="$darwin_pkg"
    )

    install_package pkg_arr

  done < ${menv_pkgs_dir}/${pkg}.pkgs
}
