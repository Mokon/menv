#!/bin/bash
# (C) 2013-2019 David 'Mokon' Bond, All Rights Reserved

menv_target_children nonlogin

if [[ $MENV_ROOT -ne 0 ]] ; then
  if [ $DIST != "darwin" ] ; then
    (sudo ntpdate -s time.nist.gov &> /dev/null &)
  fi
fi

export PATH=$PATH:$HOME/bin:$menv_bin_dir:$menv_local_bin_dir:$menv_cache_bin_dir:${menv_cache_npm_bin_dir}

if [[ "$MENV_INTERACTIVE" == 1 ]] ; then

menv_load_install_opts

menv_target_children login

# Check the script version and update if needed. Never update an ignore version.
testconnection github.com &> /dev/null
if [ $? ]; then
  if [ "$(menv_version get)" == "ignore" ] ; then
    echo "menv script ignored." &> $menv_logs_dir/menv_status
  elif [ "$(menv_version get)" == "$(menv_latest_version)" ] ; then
    echo "menv script up to date." &> $menv_logs_dir/menv_status
  else
    if [ -f $menv_last_no_update_file ] ; then
      find $menv_last_no_update_file -mtime +10 -type f -delete
    fi
    if [ ! -f $menv_last_no_update_file ] ; then
      read -t 5 -p "menv script different than github. update? " -n 1 -r
      echo

      if [[ $REPLY =~ ^[Yy]$ ]] ; then
        echo "menv script different than github. Auto-updating." | tee $menv_logs_dir/menv_status
        menv_target update
      else
        touch $menv_last_no_update_file
        echo "menv script different than github. Not-updating" | tee $menv_logs_dir/menv_status
        echo
      fi
    fi
  fi
else
  echo "Git Hub not reachable. Could not check if menv is up to date." | tee $menv_logs_dir/menv_status
fi

if [ -d ~/Desktop/ ] ; then
  if [ $DIST != "darwin" ] ; then
    rmdir --ignore-fail-on-non-empty ~/Desktop/
  fi
fi

for dir in pics docs code; do
  if [ -d $menv_local_dir/$dir ] ; then
    if ! find $menv_local_dir/$dir -mindepth 1 -print -quit | grep -q .; then
      echo "Deleting empty $dir directory."
      $BINRM -rf $menv_local_dir/$dir
      if_symlink_rm ~/$dir
    elif [ ! -L ~/$dir ] ; then
      echo "Symlinking $dir directory."
      safe_symlink ~/$dir $menv_local_dir/$dir
    fi
  elif [ -L ~/$dir ] ; then
    if_symlink_rm ~/$dir
  fi
done

# Source a local nonlogin script if one exists.
if [ -f $menv_local_nonlogin ]; then
  source $menv_local_nonlogin
fi

fi

# Source global definitions
if [ -f /etc/bashrc ]; then
  source /etc/bashrc
fi

if [[ "$MENV_INTERACTIVE" == 1 ]] ; then
  source $menv_core_dir/motd
fi

