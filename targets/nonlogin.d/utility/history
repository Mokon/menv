#!/bin/bash
# (C) 2013-2019 David 'Mokon' Bond, All Rights Reserved

# I like a large history size and I like a history that automatically saves
# itself after each command so if my shell terminates without a proper exit I
# can still find my last command. Each sesssions saves to that sessions history
# to a personal history file to get this done. On nonlogin I also scan all
# history files that exist. If their process does not exist then I append
# that file to the global history and delete the only session history. On exist
# the session history is flushed to the global history. Global history is loaded
# into the session history on first nonloign.
if [[ $- == *i* ]] ; then
  shopt -s nullglob
  hs=${menv_history_dir}/bash_history.*
  for h in $hs ; do
    pid=${h##*.}
    if ! kill -0 $pid &> /dev/null ; then
      echo >> ~/.bash_history
      cat $h >> ~/.bash_history
      rm $h
    fi
  done
  shopt -u nullglob
fi

if [ -f ~/.bash_history ] ; then
  cp ~/.bash_history ${menv_history_dir}/bash_history.${BASHPID}
fi
export HISTCONTROL=ignoredups:erasedups
export HISTFILE=${menv_history_dir}/bash_history.${BASHPID}
export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'} history -a; history -c; history -r"

shopt -s histappend

export HISTTIMEFORMAT='%F %T '
export HISTIGNORE="reset:clear:exit:shutdown*:reboot:*systemctl poweroff*:*systemctl reboot*"
export HISTSIZE=10000
export HISTFILESIZE=10000
alias search_history="history | grep "
alias sh=search_history
alias chistory="history | cut -c 8-"

function cd {
  local default_dir=~
  if dir=`realpath "${1:-$default_dir}"` ; then
    dirstack=("${dirstack[@]}" $(pwd))
    builtin cd "$dir"
  fi

  pushd . &> /dev/null

  while [ `pwd` != "/" ] ; do
    if [ -f cscope.out ] ; then
      export CSCOPE_DB=`realpath cscope.out`
      break
    fi
    builtin cd ..
  done

  popd &> /dev/null
}

function mpop {
  builtin cd ${dirstack[@]:(-1)}
  dirstack=(${dirstack[@]:0:$((${#dirstack[@]}-1))})
}

function mdirs {
  echo ${dirstack[@]}
}
