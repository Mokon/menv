#!/bin/bash
# (C) 2013-2015 David 'Mokon' Bond, All Rights Reserved

menv_alias gits="git status -s"
menv_alias gitic="git commit -m \"Initial Commit\""
menv_alias gitc="git commit -am "
menv_alias gitpush="git push origin master"
menv_alias gitamendauthor="git commit --amend --reset-author"
menv_alias gitdo="git diff origin"
menv_alias gitdh="git diff HEAD"
menv_alias git_cleanup_repo="$BINRM \`git ls-files --other\`"
menv_alias gitcp="git cherry-pick -x"
menv_alias gitcdiff="git diff --staged --color-words --word-diff-regex=\"[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+\""
menv_alias git_mk_branch="git checkout -b"
menv_alias git_push_local_branch="git push -u origin"
menv_alias git_graphical_diff_xxdiff="git difftool -t xxdiff -y"
menv_alias git_graphical_diff_meld="git difftool -t meld -y"
menv_alias git_graphical_diff_kdiff3="git difftool -t kdiff3 -y"
menv_alias git_graphical_diff_kompare="git difftool -t kompare -y"
menv_alias git_graphical_diff="git difftool -t kompare -y"
menv_alias git_stash_keep_index="git stash -k"

# Function to clone from github.
menv_function githubc
function githubc {
  local repo=$1

  git clone https://github.com/$repo
}

# Function to git blame a sigal line.
menv_function git_blame_line
function git_blame_line {
  local file=$1
  local line=$2

  git blame $file -L $line,$line -l
}

menv_function git_diff_moved_file
function git_diff_moved_file {
  local from=$1
  local to=$2

  git diff HEAD:$from $to
}

menv_function git_find_and_replace_all
function git_find_and_replace_all {
  local oldtext=$1
  local newtext=$2

  grep -rl $oldtext . | xargs sed -i "s/$oldtext/$newtext/g"
}

menv_function stash_cmdline_install
function stash_cmdline_install {
  gem install atlassian-stash
  stash configure
  # Create a pull request from 'myBranch' into 'master' with 'michael' as a reviewer
  # stash pull-request myBranch master @michael

  # Create a pull request from the current branch into 'master'
  # stash pull-request master
  # git create-pull-request master
}

