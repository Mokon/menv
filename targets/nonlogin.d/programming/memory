#!/bin/bash
# (C) 2013-2015 David 'Mokon' Bond, All Rights Reserved

menv_alias xval="valgrind --track-origins=yes --leak-check=full "\
  "--show-reachable=yes --num-callers=100"
menv_alias rval="valgrind --tool=memcheck --leak-check=full "\
  "--show-reachable=no --undef-value-errors=no --track-origins=no "\
  "--child-silent-after-fork=no --trace-children=no --num-callers=100 --fair-sched=yes"
menv_alias sval="xval --gen-suppressions=yes --demangle=no"
menv_alias profvis="kcachegrind"
menv_alias prof="valgrind --tool=callgrind"
menv_alias visual_memcheck="valkyrie"
menv_alias gdbv="valgrind --vgdb=yes --vgdb-error=0"
menv_alias gval="rval --vgdb=yes --vgdb-error=0"
menv_alias gdbr="(echo r ; cat) | gdb --args"
menv_alias gdb_run="gdb --eval-command=run --args"
menv_alias gdb_oneshot="gdb --eval-command=run --eval-command=quit --args"
menv_alias xmlval="valgrind --tool=memcheck --leak-check=full  --show-reachable=no --undef-value-errors=no --track-origins=no  --child-silent-after-fork=no --trace-children=no --xml=yes --xml-file=xmlval.%p.memcheck"

menv_function gprof
function gprof {
  gprof $1 gmon.out &> profileinfo.out
}

menv_alias interactive_decode="addr2line -e "
menv_function decode_stacktrace
function decode_stacktrace {
  local stacktrace=${1}
  local symbol_file=${2}
  local source_dir=${3}

  while read line ; do
    local regex="^(.*)\\(*0x([0-9a-fA-F]+)\\)\\[0x([0-9a-fA-F]+)\\]$"
    if [[ "${line}" =~ ${regex} ]] ; then
      local gdbscript=`mktemp`
      cat << END > ${gdbscript}
        directory ${source_dir}
        file ${symbol_file}
        info symbol 0x${BASH_REMATCH[2]}
        list *0x${BASH_REMATCH[2]}
        quit
END
      gdb -q -x ${gdbscript}
    fi
  done < ${stacktrace}
}

