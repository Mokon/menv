#!/bin/bash
# (C) 2013-2019 David 'Mokon' Bond, All Rights Reserved

function create_yum_dnf_repos {
  create_yum_dnf_repo google-chrome \
    http://dl.google.com/linux/chrome/rpm/stable/\$basearch \
    https://dl-ssl.google.com/linux/linux_signing_key.pub
  create_yum_dnf_repo adobe-linux-x86_64 \
    http://linuxdownload.adobe.com/linux/\$basearch \
    file:///etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux
  create_yum_dnf_repo google-earth \
    http://dl.google.com/linux/earth/rpm/stable/\$basearch
  create_yum_dnf_repo jitsi \
    https://download.jitsi.org/jitsi/rpm/
  create_yum_dnf_repo bintray-resin-io-redhat \
    https://resin-io.bintray.com/redhat norepo
}

function install_rpmfusion {
  local rpmfusion_org=http://download1.rpmfusion.org
  local ver=$(rpm -E %${DIST})

  local dist=$DIST
  if [ $dist == "centos" ] ; then
    dist=el
  fi

  local free=free/${dist}/rpmfusion-free-release
  local nonfree=nonfree/${dist}/rpmfusion-nonfree-release

  local free_url=${rpmfusion_org}/${free}-${ver}.noarch.rpm
  local nonfree_url=${rpmfusion_org}/${nonfree}-${ver}.noarch.rpm

  local_install_package $free_url
  local_install_package $nonfree_url
}

function install_skype {
  fetch http://www.skype.com/go/getskype-linux-beta-fc10 skype.rpm
  local_install_package skype.rpm
  $BINRM skype.rpm
}

fedora_desktop_pkgs="libXv libXScrnSaver qt qt-x11 pulseaudio-libs
  pulseaudio-libs-glib2 alsa-plugins-pulseaudio qtwebkit"

read -t 60 -p "Do you want to install packages MENV might use? " -n 1 -r
echo
REPLY_PKGS=$REPLY

if [[ $REPLY_PKGS =~ ^[Yy]$ ]] ; then
  if [ $PKG_TYPE == "rpm" ] ; then
    install_rpmfusion
  fi

  if [ $MENV_DESKTOP -ne 0 ] ; then
    if [ $DIST == "fedora" ] ; then
      create_yum_dnf_repos
      update_packages

      install_simple_packages $fedora_desktop_pkgs
      install_simple_package plymouth-theme*

      if [ "$PKG_MGMT" == "dnf" ] ; then
        cmd="dnf"
      fi

      # redirect to dev null for now as there is a bug in fedora
      sudo $cmd debuginfo-install -q -y glibc kernel &> /dev/null
      #  | grep -v "already installed" \
      #  | grep -v "No debuginfo packages available to install"
    fi

    parse_and_install_pkgs_file desktop
    parse_and_install_pkgs_file tex
    parse_and_install_pkgs_file perl

    if [ "$PKG_TYPE" == "rpm" ] ; then
      local_install_package http://d-rats.com/yum/f11/d-rats-repo-0.1.3-1.fc12.noarch.rpm
    fi

    if [ $DIST != "darwin" ] ; then
      npm config set prefix ${menv_cache_npm_dir}
      export PATH=$PATH:${menv_cache_npm_bin_dir}

      npm_install_packages git-stats git-stats-importer http-server svgexport \
        forever xml2json-command
      gem_install_packages git_stats slackcat git_fame
      pip_install_packages gdbgui pyang terminaltables
    fi
  fi

  parse_and_install_pkgs_file root
fi
