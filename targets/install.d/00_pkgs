#!/bin/bash
# (C) 2013-2015 David 'Mokon' Bond, All Rights Reserved

menv_function install_java
function install_java {
  spushd

  local jrerpm=jre-8u40-linux-x64.rpm
  local jdkrpm=jdk-8u40-linux-x64.rpm
  local jrepkg=jre1.8.0_40-1.8.0_40-fcs.x86_64

  if rpm -q $jrepkg &> /dev/null ; then
    sudo rpm -e --quiet $jrepkg &> /dev/null
  fi

  fetch http://javadl.sun.com/webapps/download/AutoDL?BundleId=104759 $jrerpm
  wget -q -N --timeout=3 --tries=3 --no-check-certificate --no-cookies \
    --header "Cookie: oraclelicense=accept-securebackup-cookie" \
    http://download.oracle.com/otn-pub/java/jdk/8u40-b26/$jdkrpm

  sudo rpm -ivh --quiet $jrerpm &> /dev/null
  sudo rpm -ivh --quiet $jdkrpm &> /dev/null
  sudo $BINRM $jrerpm
  sudo $BINRM $jdkrpm

  function jaltinstall {
    if [ -f $1 ] ; then
      sudo alternatives --install $@
      if ! sudo alternatives --set $2 $3 &> /dev/null; then
        if [ -f /usr/bin/$2 ] ; then
          sudo rm /usr/bin/$2
        fi

        if [ -f /var/lib/alternatives/$2 ] ; then
          sudo rm /var/lib/alternatives/$2
        fi

        sudo alternatives --set $2 $3
      fi
    fi
  }

  jaltinstall /usr/bin/java java /usr/java/latest/bin/java 200000
  #jaltinstall /usr/bin/javaws javaws /usr/java/latest/bin/javaws 200000
  jaltinstall /usr/lib/mozilla/plugins/libjavaplugin.so libjavaplugin.so /usr/java/latest/lib/i386/libnpjp2.so 200000
  jaltinstall /usr/lib64/mozilla/plugins/libjavaplugin.so libjavaplugin.so.x86_64 /usr/java/latest/lib/amd64/libnpjp2.so 200000
  jaltinstall /usr/bin/javac javac /usr/java/latest/bin/javac 200000
  jaltinstall /usr/bin/jar jar /usr/java/latest/bin/jar 200000

  spopd
}

if [ $MENV_DESKTOP -ne 0 ] ; then

read -t 60 -p "Do you want to install packages MENV might use? " -n 1 -r
echo
REPLY_PKGS=$REPLY

if [[ $REPLY_PKGS =~ ^[Yy]$ ]] ; then

menv_function create_yum_dnf_repos
function create_yum_dnf_repos {
  cat << EOF | sudo tee /etc/yum.repos.d/google-chrome.repo &> /dev/null
[google-chrome]
name=google-chrome-\$basearch
baseurl=http://dl.google.com/linux/chrome/rpm/stable/\$basearch
enabled=1
gpgcheck=1
gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub
EOF

  cat << EOF | sudo tee /etc/yum.repos.d/adobe-linux-x86_64.repo &> /dev/null
[adobe-linux-x86_64]
name=Adobe Systems Incorporated
baseurl=http://linuxdownload.adobe.com/linux/x86_64/
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux
EOF

  cat << EOF | sudo tee /etc/yum.repos.d/google-earth.repo &> /dev/null
[google-earth]
name=google-earth
baseurl=http://dl.google.com/linux/earth/rpm/stable/x86_64
enabled=1
gpgcheck=1
EOF

  cat << EOF | sudo tee /etc/yum.repos.d/jitsi.repo &> /dev/null
[jitsi]
name=Jitsi
baseurl=https://download.jitsi.org/jitsi/rpm/
enabled=1
gpgcheck=0
EOF
}


  if [ $DIST == "fedora" ] ; then
    pkgs="libXv libXScrnSaver qt qt-x11 pulseaudio-libs pulseaudio-libs-glib2
          alsa-plugins-pulseaudio qtwebkit"
    install_simple_packages $pkgs

    create_yum_dnf_repos

    if [ "$PKG_MGMT" == "yum" ] ; then

      install_simple_package yum-utils

      sudo yum localinstall -q --nogpgcheck \
        http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm \
        http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm \
        | grep -v "already installed and latest version"

      sudo yum update -q -y

      fetch http://www.skype.com/go/getskype-linux-beta-fc10 skype.rpm
      sudo yum -y -q localinstall skype.rpm | grep -v "already installed and latest version"
      $BINRM skype.rpm
    fi

    if [ "$PKG_MGMT" == "dnf" ] ; then
      sudo dnf install \
        https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm \
        https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm \
        | grep -v "already installed and latest version"

      sudo dnf update -q -y

      fetch http://www.skype.com/go/getskype-linux-beta-fc10 skype.rpm
      sudo dnf -y -q install skype.rpm | grep -v "already installed and latest version"
      $BINRM skype.rpm
    fi

    install_simple_package plymouth-theme*

    install_java
  fi

  pkgs="patchutils powertop ntpdate sed wireshark wireshark-gnome wget grep
        openssh-clients python-fabulous bleachbit gdmap gimp vlc
        google-chrome-stable cmatrix eclipse-jdt lynx time inkscape psmisc
        dbus-x11 festival speech-dispatcher-utils espeak smem htop rdesktop
        simple-mtpfs libmtp fuse fuse-libs gvfs-mtp fbterm clang clang-devel
        tmux screen cscope vim wemux bc sloccount cloc perltidy strace meld
        cpulimit npm sil-gentium-fonts sil-gentium-fonts-common dig nslookup
        gem ruby-devel gitstats colordiff tig nmap uncrustify vagrant twin
        iftop graphviz dsniff pyang plantuml python-matplotlib
        perl-List-AllUtils perl-List-UtilsBy perl-File-chdir
        perl-Devel-Profiler perl-JSON xxdiff go socat sensors
        texlive-scheme-full texlive-glossaries youtube-dl mplayer hwloc
        hwloc-gui perl-Text-SpellChecker perl-Sysadm-Install jhead ImageMagick
        perl-Clone perl-Storable perl-Path-Class perl-Image-ExifTool
        perl-DateTime perl-DateTime-Format-Strptime
        audacity-freeworld sox-plugins-freeworld sox-plugins-nonfree
        python3-pyusb pyusb chirp xclip k4dirstat brasero"

  install_simple_packages $pkgs

  sudo rpm -Uf --quiet http://d-rats.com/yum/f11/d-rats-repo-0.1.3-1.fc12.noarch.rpm \
    2>&1 | grep -v "already installed"

  sudo debuginfo-install -q -y glibc kernel \
    | grep -v "already installed and latest version" \
    | grep -v "No debuginfo packages available to install"

  npm config set prefix ~/menv/npm
  menv_export PATH=$PATH:$HOME/menv/npm/bin
  npm install --loglevel error -g git-stats &> /dev/null
  npm install --loglevel error -g git-stats-importer &> /dev/null
  npm install --loglevel error -g http-server &> /dev/null
  npm install --loglevel error -g svgexport &> /dev/null

  gem install -q git_stats &> /dev/null
  gem install -q slackcat &> /dev/null
fi

fi
